.container {
  --margin: 10px;
  --margin-y-editor-rows: var(--edit-margin-md);
  --margin-y-drawer: var(--edit-margin-lg);
}

.top-bar,
.drawer {
  display: flex;
  background-color: var(--edit-color-background-1);
  align-items: center;
}

.top-bar {
  justify-content: space-between;
}

.container.filters-open .drawer {
  padding-bottom: var(--edit-margin-xl);
  justify-content: flex-start;
  align-items: flex-start;
}

.container.drawer-open .top-bar {
  box-shadow: none;
  border-bottom-color: var(--edit-color-border-light);
}

.top-bar,
.container:not(.small-window) .filters {
  padding: var(--edit-margin-md) var(--edit-margin-lg);
}

.drawer {
  padding: var(--margin-y-drawer) var(--edit-margin-lg);
}

@media (min-width: 1024px) {
  .top-bar,
  .container:not(.small-window) .filters {
    padding: var(--edit-margin-md) var(--edit-margin-xxl);
  }

  .drawer {
    padding: var(--margin-y-drawer) var(--edit-margin-xxl);
  }
}

.container.filters-open .drawer {
  flex-direction: column;
  align-items: stretch;
}

.drawer-buttons {
  margin-top: var(--margin-y-drawer);
  padding-top: var(--margin-y-drawer);
  border-top: var(--edit-border-width-standard) solid
    var(--edit-color-border-light);
  display: flex;
}

.drawer-buttons > * {
  flex: 1;
}

.form {
  display: flex;
  align-items: center;
  flex: 1;
  position: relative;
}

.search-icon {
  /* I want to display the icon before the input, but put it after the input in
  the markup so that I can do `.input:focus + .search-icon` below. */
  order: -1;
  color: var(--edit-color-text-3);
  transition: all var(--edit-transition-duration-standard) !important;
}

.input:focus + .search-icon {
  color: var(--edit-color-text-1);
}

.input {
  max-width: 500px !important;
}

.suggestions {
  position: absolute;
  top: calc(100% + var(--edit-margin-xxs));
  left: 24px;
  max-width: 500px;
  background-color: var(--edit-color-background-1);
  box-shadow: var(--edit-shadow-4px);
  z-index: var(--edit-z-index-dropdown);
  border-radius: 0;
}

.container.small-window .suggestions {
  left: 0;
}

.input:not(:focus) ~ .suggestions {
  display: none;
}

.suggestion {
  cursor: pointer;
  outline: none;
  padding: var(--edit-margin-sm) var(--edit-margin-md);
  text-align: left;
  font-size: var(--edit-font-size-sm);
  width: 100%;
}

.suggestion > *,
.suggestion-hint > * {
  vertical-align: middle;
}

.suggestion.selected {
  background-color: var(--edit-color-background-3);
}

.suggestion-prefix {
  color: var(--edit-color-text-3);
}

.suggestion-hint {
  display: none;
  float: right;
  font-size: var(--edit-font-size-xs);
  color: var(--edit-color-text-3);
}

.suggestion-hint svg {
  margin: -4px 0;
}

.suggestion.selected .suggestion-hint {
  display: block;
}

.operator-selector,
.mimetype-dropdown,
.top-bar .add-filter-button,
.clear-filters-button,
.create-new-button,
.remove-filter-button,
.container:not(.small-window) .close-filter-editor {
  margin-left: var(--margin);
}

@media (max-width: 1023px) {
  .add-filter-button,
  .clear-filters-button,
  .create-new-button,
  .update-filter-button,
  .remove-filter-button {
    padding-left: 25px !important;
    padding-right: 25px !important;
  }
}

.filter-editor {
  display: flex;
  margin: calc(-1 * var(--margin-y-editor-rows)) 0 0 calc(-1 * var(--margin));
  flex: 1;
}

.container.small-window .filter-editor {
  flex-direction: column;
}

.filter-editor-row {
  display: flex;
  margin: var(--margin-y-editor-rows) 0 0 var(--margin);
  align-items: center;
}

.drawer .field-selector,
.drawer .operator-selector {
  flex: 1;
}

.heading-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 0;
}

.filter-editor-row:last-child {
  flex: 1;
}

.drawer .filter-editor-row:last-child {
  align-items: flex-start;
}

.filter-editor-heading {
  color: var(--edit-color-primary);
  font-size: var(--edit-font-size-nav);
  font-weight: 700;
  letter-spacing: var(--edit-spacing-nav);
  text-transform: uppercase;
  margin: 0;
}

.open-search,
.open-filters,
.close-search,
.close-filter-editor {
  padding: 0;
  color: var(--edit-color-text-3);
  transition: color var(--edit-transition-duration-standard);
  cursor: pointer;
  outline: 0;
}

.open-filters {
  margin-left: var(--edit-margin-xs);
}

.close-search,
.close-filter-editor {
  margin-left: var(--edit-margin-xxs);
}

.open-search:hover,
.container.search-open .open-search,
.open-filters:hover,
.container.filters-open .open-filters,
.close-search:hover,
.close-filter-editor:hover {
  color: var(--edit-color-text-1);
}

.open-search > svg,
.open-filters > svg,
.close-search > svg,
.close-filter-editor > svg {
  vertical-align: middle;
}

.filter-count {
  font-size: var(--edit-font-size-xs);
  font-weight: 700;
  color: var(--edit-color-positive);
}

.filler {
  flex: 1;
}

.filters {
  margin: calc(-1 * var(--margin)) 0 0 calc(-1 * var(--margin));
}

.drawer .filters {
  margin-top: calc(var(--margin-y-editor-rows) - var(--margin));
}

.filter {
  margin: var(--margin) 0 0 var(--margin);
  display: inline-flex;
  align-items: center;
  background-color: var(--edit-color-background-2);
  border-radius: var(--edit-radius-elem);
  font-size: var(--edit-font-size-sm);
  color: var(--edit-color-text-2);
  padding: 0 var(--edit-margin-md);
  height: var(--edit-elem-height-medium);
  cursor: pointer;
  border: var(--edit-border-width-standard) solid var(--edit-color-border-light);
  transition: all var(--edit-transition-duration-standard);
}

.filter:hover:not(.selected) {
  background-color: var(--edit-color-background-1);
}

.filter.selected {
  background-color: var(--edit-color-highlight-2);
}

.filter-field {
  font-weight: 700;
}

.filter-operator {
  margin: 0 var(--edit-margin-xxs);
}

.filter-close {
  color: var(--edit-text-color-2);
  border-radius: 50%;
  width: 30px;
  height: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0;
  outline: 0;
  margin: -6px -10px -6px var(--edit-margin-xxs);
  transition: all var(--edit-transition-duration-standard);
}

.filter-close:hover {
  color: var(--edit-text-color-1);
  background-color: rgba(0, 0, 0, 0.05);
}
